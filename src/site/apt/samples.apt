~~
~~ Copyright 2012 Oracle Corporation. All Rights Reserved.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~    http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~

GST Site Foundation Samples

  The GST Site Foundation comes with a couple of samples:

    * {{gsf-sample}}: some sample code around Actions, AppContext and ObjectFactory customization.

    * {{gsf-sample-avisports}}: a avisport refactoring to GSF. This gives a working example of GSF on-top of avisports, for instance in a JSK.

    * some {{{./action/index.html#Code_samples}samples}} based on FirstSiteII, created during GSF-1.2 version.

*  {gsf-sample}

   The project show some of the mostly used coding features of GSF. It is meant as a showcase for the possibilities and code constructs. Happy browsing.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/groovy/gsf/ObjectFactory.groovy}gsf-sample/src/main/groovy/gsf/ObjectFactory.groovy}}

    A in groovy implemented ObjectFactory that is used in for sites or when the site is not known yet. If in a site specific object factory a service is not defined, the one from this class is used.

      Compare the file with an Spring XML file. We believe that this construct is easier to manage.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/groovy/gsf/mysite/ObjectFactory.groovy}gsf-sample/src/main/groovy/gsf/mysite/ObjectFactory.groovy}}

    An ObjectFactory specific for the <<<mysite>>> site. The site selection is based on the ics variable <<<site>>>.



  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/groovy/root.groovy}gsf-sample/src/main/groovy/root.groovy}}
    
    A Action by the name of <<<root>>>. If GST/Dispatcher SiteEntry sets an argument <<<action=root>>> then this is the default action used, unless the action is overwritten by the GET or POST request.

   This allows for easy override of the default RenderPageAction. This RenderPageAction is the default action that is used if no action parameter is provided.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/search/solr/DefaultSolrSearchService.java}gsf-sample/src/main/java/com/yourcompany/owcs/search/solr/DefaultSolrSearchService.java}}

   A skeleton sample of a service

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/search/SearchResults.java}gsf-sample/src/main/java/com/yourcompany/owcs/search/SearchResults.java}}
   
    Domain bean used by the SolrSearchService.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/search/SolrSearchService.java}gsf-sample/src/main/java/com/yourcompany/owcs/search/SolrSearchService.java}}
    
    Interface of a service definition.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/config/MyExtendedObjectFactory.java}gsf-sample/src/main/java/com/yourcompany/owcs/config/MyExtendedObjectFactory.java}}

   A ObjectFactory that extends IcsBackedOjectFactoryTemplate. This is an alterbative approach to the groovy ObjectFactories.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/config/SpringAppContext.java}gsf-sample/src/main/java/com/yourcompany/owcs/config/SpringAppContext.java}}

    A sample on how to get your beans from Spring, aka Spring integration.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/config/SpringFactoryProducer.java}gsf-sample/src/main/java/com/yourcompany/owcs/config/SpringFactoryProducer.java}}

    An example FactoryProducer that uses Spring to create the services. This is used by SpringAppContext.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/config/ExtendedAppContext.java}gsf-sample/src/main/java/com/yourcompany/owcs/config/ExtendedAppContext.java}}

    An example of a AppContext. This is usefull if you want to do deeper level modifications.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/config/MyCompanyWebAppContext.java}gsf-sample/src/main/java/com/yourcompany/owcs/config/MyCompanyWebAppContext.java}}


    A rudimentary sample of an AppContext for your company.



  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/seed/DetectorSeed.java}gsf-sample/src/main/java/com/yourcompany/owcs/seed/DetectorSeed.java}}


   A sample Seed (java bridge from an XML element) to help with Device Detection.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfoAccessTemplate.java}gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfoAccessTemplate.java}}

    An example on how to create a bean from an asset, making use of all the helpers in the AssetAccessTemplate.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductItem.java}gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductItem.java}}

   A domain bean used in ProductInfoAcessTemplate.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfo.java}gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfo.java}}
    
   A domain bean used in ProductInfoAcessTemplate.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfoAction.java}gsf-sample/src/main/java/com/yourcompany/owcs/products/ProductInfoAction.java}}

   An Action that shows the use of ProductInfoAccessTemplate.




  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/action/RedirectRenderPageAction.java}gsf-sample/src/main/java/com/yourcompany/owcs/action/RedirectRenderPageAction.java}}
   
   An unfinished sample on how to do redirection based on different devices.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/action/SearchAction.java}gsf-sample/src/main/java/com/yourcompany/owcs/action/SearchAction.java}}


   A sample action showing the use of a search service.


  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/action/SampleServiceUseAction.java}gsf-sample/src/main/java/com/yourcompany/owcs/action/SampleServiceUseAction.java}}

   A sample action showing the use of a service.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/main/java/com/yourcompany/owcs/action/GeneralRenderPage.java}gsf-sample/src/main/java/com/yourcompany/owcs/action/GeneralRenderPage.java}}


  A showcase of reading the current asset (based on c/cid) and an asset associaton, and putting them on the model, so the JSP template can use then in JSP Expression Language, ie <<<${asset.name}>>>.



  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/cs/SampleLayout.jsp}gsf-sample/src/cs/SampleLayout.jsp}}

   A sample Layout template.

  * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample/src/cs/MainDetail.jsp}gsf-sample/src/cs/MainDetail.jsp}}

    A sample detail template.


   
*  {gsf-sample-avisports}

       This sample does is a showcase for coding. It does not include vanity urls, as this would involve changing content assets.

       To install this sample you need to add the gst-foundation-all.jar to WEB-INF/lib, add the groovy-all.jar as mentioned in the {{{./InstallGuide.html}install guide}}. The copy the gsf-groovy directory from the gsf-sample-avisports project folder to WEB-INF/gsf-groovy. Restart appserver. The use csdt command tools to export the existing code assets to the workspce. The copy the content from gsf-sample-avisports/csdt into that folder in such a way that the <<<src>>> folders map. After that import thew workspace with csdt.

       Use for instance the following command line script.

-----------

      java -cp ./ContentServer/11.1.1.6.0/csdt-client-1.2.jar com.fatwire.csdt.client.main.CSDT \
       http://localhost:8080/cs/ContentServer username=fwadmin password=xceladmin \
       resources='Template:*;CSElement:*;SiteEntry:*' \
       datastore=tmp/avi fromSites=avisports cmd=export

-----------------

     After copying the csdt folder files issue:

---------------

java -cp ./ContentServer/11.1.1.6.0/csdt-client-1.2.jar com.fatwire.csdt.client.main.CSDT \
       http://localhost:8080/cs/ContentServer username=fwadmin password=xceladmin \
       resources='Template:*;CSElement:*;SiteEntry:*' \
       datastore=tmp/avi cmd=import

-----------
 


    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/gsf/ObjectFactory.groovy}gsf-groovy/gsf/ObjectFactory.groovy}}

      Generic ObjectFactory, used in all sites, to create services to be used in Actions, via the @InjectForRequest annotation.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/gsf/avisports/ObjectFactory.groovy}gsf-groovy/gsf/avisports/ObjectFactory.groovy}}

      Specific ObjectFactory, only used in avisports site. This complements the generic ObjectFactory and the out of the box IcsBackedObjectFactory. For this factory to be selected the site parameter at the beginning of the element needs to be correct. This means that one should be carefull if you use a generic GST/Dispatcher element for all sites and the site param is not set correcttly. Use of this inside Template is mostly predictable.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/root.groovy}gsf-groovy/root.groovy}}

      A named action, in this case root, that is aware of locale and device. It will select the correct translated asset based on browser preferences, or explicitly choosen locales, as well as device types (dekstop, mobile,tablet). It will try to dispatch to the device specific layout template, for instanace 3ColumnLayout_mobile, if the asset has a 3ColumnLayout template specified.


    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/ArticleCategory/Link.groovy}gsf-groovy/ArticleCategory/Link.groovy}}

      Action for creating a link to an ArticleCategory.


    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/avisports/Page/GetLink.groovy}gsf-groovy/avisports/Page/GetLink.groovy}}

      Action for creating a link to a Page.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/avisports/AVIArticle/GetHome.groovy}gsf-groovy/avisports/AVIArticle/GetHome.groovy}}

      Action for creating a link to a the Home page.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/avisports/AVIArticle/Summary.groovy}gsf-groovy/avisports/AVIArticle/Summary.groovy}}
 
      Action for the Summary templates.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/gsf-groovy/avisports/AVIArticle/GetLink.groovy}gsf-groovy/avisports/AVIArticle/GetLink.groovy}}

      Action for creating a link to a AVIArticle.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/csdt/src/_metadata/ELEMENTS/avisports/navbar_action.groovy}csdt/src/_metadata/ELEMENTS/avisports/navbar_action.groovy}}

      This is a sample of an Action defined in a CSElement. In this case the action can be manged in the same way as any CSElement and can be published.

    * {{{https://github.com/dolfdijkstra/gst-foundation/tree/master/gsf-sample-avisports/src/main/csdt/src/_metadata/ELEMENTS/Wrapper.xml}csdt/src/_metadata/ELEMENTS/Wrapper.xml}}
  
      This is a GSF Dispatcher element. Because avisports does not make use of a outer wrapper, this is an addition. The sample code in this project for the link builder is not changed to make use of Wrapper. If you call the site via this wrapper, the device detection and asset locale selection is kicked in.
     
     Sample urls to use the wrapper:

     <<<http://localhost:8080/cs/ContentServer?c=Page&pagename=Wrapper&childpagename=avisports/Page/HomeLayout&cid=1327351719456>>>

     <<<http://localhost:8080/cs/ContentServer?c=Page&pagename=Wrapper&childpagename=avisports/Page/SectionLayout3&cid=1327351719525>>>

     To change avisports to make use of Vanity urls, you would need to register VirtualRoot assets, set the path fields of all the assets, set up a webserver with the rewrite rules. For all the assets that are not vanity assets you would need to  change the actions that create links to dispatch to the wrapper.
